{"ast":null,"code":"var _jsxFileName = \"/Users/evgenii/eventify1.0/my-project/app/screens/ListingsScreen.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport listingsApi from \"../api/listings\";\nimport AppText from \"../components/AppText\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useApi = useApi(listingsApi.getListings),\n      listings = _useApi.data,\n      error = _useApi.error,\n      loading = _useApi.loading,\n      loadListings = _useApi.request;\n\n  useEffect(function () {\n    loadListings();\n  }, []);\n  return React.createElement(Screen, {\n    style: styles.screen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, error && React.createElement(React.Fragment, null, React.createElement(AppText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Couldn's retrieve the listings.\"), React.createElement(Button, {\n    title: \"Retry\",\n    onPress: loadListings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), React.createElement(ActivityIndicator, {\n    visible: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), React.createElement(FlatList, {\n    data: listings,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Card, {\n        title: item.title,\n        subtitle: \"$\" + item.price,\n        imageUrl: item.images[0].url,\n        onPress: function onPress() {\n          return navigation.navigate(routes.LISTING_DETAILS, item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ListingsScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.light\n  }\n});","map":{"version":3,"sources":["/Users/evgenii/eventify1.0/my-project/app/screens/ListingsScreen.js"],"names":["React","useEffect","useState","Card","Screen","colors","routes","listingsApi","AppText","ActivityIndicator","useApi","ListingsScreen","navigation","getListings","listings","data","error","loading","loadListings","request","styles","screen","listing","id","toString","item","title","price","images","url","navigate","LISTING_DETAILS","StyleSheet","create","backgroundColor","light"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,WAAP;AACA,OAAOC,OAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,MAAP;;AAEA,SAASC,cAAT,OAAwC;AAAA;;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,gBAC4BF,MAAM,CACtEH,WAAW,CAACM,WAD0D,CADlC;AAAA,MACxBC,QADwB,WAC9BC,IAD8B;AAAA,MACdC,KADc,WACdA,KADc;AAAA,MACPC,OADO,WACPA,OADO;AAAA,MACWC,YADX,WACEC,OADF;;AAKtClB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEE,MAAM,CAACC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,IACJ,0CACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEE,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFJ,EAOE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEH,QADR;AAEE,IAAA,YAAY,EAAE,sBAACQ,OAAD;AAAA,aAAaA,OAAO,CAACC,EAAR,CAAWC,QAAX,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGC,IAAH,SAAGA,IAAH;AAAA,aACV,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,QAAA,QAAQ,EAAE,MAAMD,IAAI,CAACE,KAFvB;AAGE,QAAA,QAAQ,EAAEF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeC,GAH3B;AAIE,QAAA,OAAO,EAAE;AAAA,iBAAMjB,UAAU,CAACkB,QAAX,CAAoBxB,MAAM,CAACyB,eAA3B,EAA4CN,IAA5C,CAAN;AAAA,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADU;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAuBD;;AAED,eAAed,cAAf;AACA,IAAMS,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,eAAe,EAAE7B,MAAM,CAAC8B;AADlB;AADuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, FlatList, Button } from \"react-native\";\nimport Card from \"../components/Card\";\nimport Screen from \"../components/Screen\";\nimport colors from \"../config/colors\";\nimport routes from \"../navigation/routes\";\nimport listingsApi from \"../api/listings\";\nimport AppText from \"../components/AppText\";\nimport ActivityIndicator from \"../components/ActivityIndicator\";\nimport useApi from \"../hooks/useApi\";\n\nfunction ListingsScreen({ navigation }) {\n  const { data: listings, error, loading, request: loadListings } = useApi(\n    listingsApi.getListings\n  );\n\n  useEffect(() => {\n    loadListings();\n  }, []);\n  return (\n    <Screen style={styles.screen}>\n      {error && (\n        <>\n          <AppText>Couldn's retrieve the listings.</AppText>\n          <Button title=\"Retry\" onPress={loadListings} />\n        </>\n      )}\n      <ActivityIndicator visible={loading} />\n      <FlatList\n        data={listings}\n        keyExtractor={(listing) => listing.id.toString()}\n        renderItem={({ item }) => (\n          <Card\n            title={item.title}\n            subtitle={\"$\" + item.price}\n            imageUrl={item.images[0].url}\n            onPress={() => navigation.navigate(routes.LISTING_DETAILS, item)}\n          />\n        )}\n      />\n    </Screen>\n  );\n}\n\nexport default ListingsScreen;\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: colors.light,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}