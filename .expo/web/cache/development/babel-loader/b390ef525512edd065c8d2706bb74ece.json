{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/evgenii/eventify1.0/my-project/app/screens/ListingEditScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Yup from \"yup\";\nimport { AppForm, AppFormField, AppFormPicker, SubmitButton } from \"../components/forms\";\nimport Screen from \"../components/Screen\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport listingsApi from \"../api/listings\";\nvar validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"please select at least 1 image\")\n});\nvar categories = [{\n  label: \"Furniture\",\n  value: 1,\n  backgroundColor: \"red\",\n  icon: \"apps\"\n}, {\n  label: \"Clothing\",\n  value: 2,\n  backgroundColor: \"green\",\n  icon: \"email\"\n}, {\n  label: \"Camera\",\n  value: 3,\n  backgroundColor: \"blue\",\n  icon: \"human\"\n}];\n\nfunction ListingEditScreen(props) {\n  var location = useLocation();\n\n  var handleSubmit = function handleSubmit(listing) {\n    var result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(listingsApi.addListing(_objectSpread(_objectSpread({}, listing), {}, {\n              location: location\n            })));\n\n          case 2:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", alert(\"Couldnt save ur shiiits \"));\n\n          case 5:\n            alert(\"Success\");\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Screen, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(AppForm, {\n    initialValues: {\n      title: \"\",\n      price: \"\",\n      description: \"\",\n      category: null,\n      images: []\n    },\n    onSubmit: handleSubmit,\n    validationSchema: validationSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(FormImagePicker, {\n    name: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(AppFormField, {\n    maxLength: 255,\n    name: \"title\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(AppFormField, {\n    keyboardType: \"numeric\",\n    maxLength: 8,\n    name: \"price\",\n    placeholder: \"Price\",\n    width: \"30%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(AppFormPicker, {\n    items: categories,\n    name: \"category\",\n    numberOfColumns: 3,\n    PickerItemComponent: CategoryPickerItem,\n    placeholder: \"Category\",\n    width: \"50%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(AppFormField, {\n    maxLength: 255,\n    multiline: true,\n    name: \"description\",\n    numberOfLines: 3,\n    placeholder: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(SubmitButton, {\n    title: \"Post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ListingEditScreen;\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["/Users/evgenii/eventify1.0/my-project/app/screens/ListingEditScreen.js"],"names":["React","useEffect","useState","Yup","AppForm","AppFormField","AppFormPicker","SubmitButton","Screen","CategoryPickerItem","FormImagePicker","useLocation","listingsApi","validationSchema","object","shape","title","string","required","min","label","price","number","max","description","category","nullable","images","array","categories","value","backgroundColor","icon","ListingEditScreen","props","location","handleSubmit","listing","addListing","result","ok","alert","styles","container","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet } from \"react-native\";\nimport * as Yup from \"yup\";\n\nimport {\n  AppForm,\n  AppFormField,\n  AppFormPicker,\n  SubmitButton,\n} from \"../components/forms\";\nimport Screen from \"../components/Screen\";\nimport CategoryPickerItem from \"../components/CategoryPickerItem\";\nimport FormImagePicker from \"../components/forms/FormImagePicker\";\nimport useLocation from \"../hooks/useLocation\";\nimport listingsApi from \"../api/listings\";\n\nconst validationSchema = Yup.object().shape({\n  title: Yup.string().required().min(1).label(\"Title\"),\n  price: Yup.number().required().min(1).max(10000).label(\"Price\"),\n  description: Yup.string().label(\"Description\"),\n  category: Yup.object().required().nullable().label(\"Category\"),\n  images: Yup.array().min(1, \"please select at least 1 image\"),\n});\nconst categories = [\n  { label: \"Furniture\", value: 1, backgroundColor: \"red\", icon: \"apps\" },\n  { label: \"Clothing\", value: 2, backgroundColor: \"green\", icon: \"email\" },\n  { label: \"Camera\", value: 3, backgroundColor: \"blue\", icon: \"human\" },\n];\nfunction ListingEditScreen(props) {\n  const location = useLocation();\n\n  const handleSubmit = async (listing) => {\n    const result = await listingsApi.addListing({ ...listing, location });\n\n    if (!result.ok) return alert(\"Couldnt save ur shiiits \");\n    alert(\"Success\");\n  };\n\n  return (\n    <Screen style={styles.container}>\n      <AppForm\n        initialValues={{\n          title: \"\",\n          price: \"\",\n          description: \"\",\n          category: null,\n          images: [],\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <FormImagePicker name=\"images\"></FormImagePicker>\n        <AppFormField maxLength={255} name=\"title\" placeholder=\"Title\" />\n        <AppFormField\n          keyboardType=\"numeric\"\n          maxLength={8}\n          name=\"price\"\n          placeholder=\"Price\"\n          width=\"30%\"\n        />\n        <AppFormPicker\n          items={categories}\n          name=\"category\"\n          numberOfColumns={3}\n          PickerItemComponent={CategoryPickerItem}\n          placeholder=\"Category\"\n          width=\"50%\"\n        />\n        <AppFormField\n          maxLength={255}\n          multiline\n          name=\"description\"\n          numberOfLines={3}\n          placeholder=\"Description\"\n        />\n        <SubmitButton title=\"Post\" />\n      </AppForm>\n    </Screen>\n  );\n}\n\nexport default ListingEditScreen;\nconst styles = StyleSheet.create({\n  container: {},\n});\n"]},"metadata":{},"sourceType":"module"}