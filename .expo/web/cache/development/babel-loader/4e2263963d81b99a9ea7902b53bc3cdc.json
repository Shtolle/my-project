{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/evgenii/eventify1.0/my-project/app/components/AppPicker.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AppText from \"./AppText\";\nimport Screen from \"./Screen\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\n\nfunction AppPicker(_ref) {\n  var _this = this;\n\n  var items = _ref.items,\n      _ref$numberOfColumns = _ref.numberOfColumns,\n      numberOfColumns = _ref$numberOfColumns === void 0 ? 1 : _ref$numberOfColumns,\n      onSelectItem = _ref.onSelectItem,\n      _ref$PickerItemCompon = _ref.PickerItemComponent,\n      PickerItemComponent = _ref$PickerItemCompon === void 0 ? PickerItem : _ref$PickerItemCompon,\n      placeholder = _ref.placeholder,\n      selectedItem = _ref.selectedItem,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? \"100%\" : _ref$width;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(\"apps\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      icon = _useState4[0],\n      setIcon = _useState4[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: [styles.placeholder, {\n      width: width\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, icon && React.createElement(MaterialCommunityIcons, {\n    color: defaultStyles.colors.medium,\n    name: icon,\n    style: styles.icon,\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), selectedItem ? React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, selectedItem.label) : React.createElement(AppText, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, placeholder), React.createElement(MaterialCommunityIcons, {\n    color: defaultStyles.colors.medium,\n    name: \"chevron-down\",\n    size: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }))), React.createElement(Modal, {\n    visible: modalVisible,\n    animationType: \"slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Screen, {\n    style: {\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"close\",\n    onPress: function onPress() {\n      return setModalVisible(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    numColumns: numberOfColumns,\n    data: items,\n    keyExtractor: function keyExtractor(item) {\n      return item.value.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(PickerItemComponent, {\n        item: item,\n        label: item.label,\n        onPress: function onPress() {\n          setModalVisible(false);\n          onSelectItem(item);\n          setIcon(item.icon);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default AppPicker;\nvar styles = StyleSheet.create({\n  icon: {\n    alignSelf: \"center\",\n    marginRight: 10\n  },\n  placeholder: {\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: 25,\n    marginVertical: 10,\n    padding: 15,\n    backgroundColor: defaultStyles.colors.lightgrey\n  },\n  text: {\n    flex: 1,\n    color: defaultStyles.colors.grey\n  }\n});","map":{"version":3,"sources":["/Users/evgenii/eventify1.0/my-project/app/components/AppPicker.js"],"names":["React","useState","MaterialCommunityIcons","AppText","Screen","defaultStyles","PickerItem","AppPicker","items","numberOfColumns","onSelectItem","PickerItemComponent","placeholder","selectedItem","width","modalVisible","setModalVisible","icon","setIcon","styles","colors","medium","text","label","alignItems","item","value","toString","StyleSheet","create","alignSelf","marginRight","height","flexDirection","borderRadius","marginVertical","padding","backgroundColor","lightgrey","flex","color","grey"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  FlatList,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport AppText from \"./AppText\";\nimport Screen from \"./Screen\";\nimport defaultStyles from \"../config/styles\";\nimport PickerItem from \"./PickerItem\";\nfunction AppPicker({\n  items,\n  numberOfColumns = 1,\n  onSelectItem,\n  PickerItemComponent = PickerItem,\n  placeholder,\n  selectedItem,\n  width = \"100%\",\n}) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [icon, setIcon] = useState(\"apps\");\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\n        <View style={[styles.placeholder, { width }]}>\n          {icon && (\n            <MaterialCommunityIcons\n              color={defaultStyles.colors.medium}\n              name={icon}\n              style={styles.icon}\n              size={30}\n            />\n          )}\n          {selectedItem ? (\n            <AppText style={styles.text}>{selectedItem.label}</AppText>\n          ) : (\n            <AppText style={styles.text}>{placeholder}</AppText>\n          )}\n\n          <MaterialCommunityIcons\n            color={defaultStyles.colors.medium}\n            name=\"chevron-down\"\n            size={30}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <Screen style={{ alignItems: \"center\" }}>\n          <Button title=\"close\" onPress={() => setModalVisible(false)}></Button>\n          <FlatList\n            numColumns={numberOfColumns}\n            data={items}\n            keyExtractor={(item) => item.value.toString()}\n            renderItem={({ item }) => (\n              <PickerItemComponent\n                item={item}\n                label={item.label}\n                onPress={() => {\n                  setModalVisible(false);\n                  onSelectItem(item);\n                  setIcon(item.icon);\n                }}\n              />\n            )}\n          />\n        </Screen>\n      </Modal>\n    </>\n  );\n}\n\nexport default AppPicker;\nconst styles = StyleSheet.create({\n  icon: {\n    alignSelf: \"center\",\n    marginRight: 10,\n  },\n  placeholder: {\n    height: 70,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: 25,\n    marginVertical: 10,\n    padding: 15,\n    backgroundColor: defaultStyles.colors.lightgrey,\n  },\n  text: {\n    flex: 1,\n    color: defaultStyles.colors.grey,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}